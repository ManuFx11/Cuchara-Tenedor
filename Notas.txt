
//React Navigation Instalación 

yarn add @react-navigation/native@~5.1.5

Si usamos expo hay que instalar todo esto: 

expo install react-native-gesture-handler@~1.6.0
expo install react-native-reanimated@~1.7.0
expo install react-native-screens@~2.2.0
expo install react-native-safe-area-context@~0.7.3
expo install @react-native-community/masked-view@~0.1.6

//Instalamos stack react-navigation

yarn add @react-navigation/stack@~5.2.10

//Para utilizar un menu de tab abajo debemos usar esto
yarn add @react-navigation/bottom-tabs@~5.2.6

// React Native Elements:  Es una biblioteca de componentes tipo Boostrap que nos dota de un manejo más facil.

--> yarn add react-native-elements

// Firebase

Tenemos que crear un proyecto en Google Firebase y registrar la app, una vez realizado obtendremos el SDK.

Instalamos el paquete firebase: yarn add firebase@~7.9.0

//Instalamos Lodash paquete de funciones javascript más avanzadas.

https://lodash.com

//Instalacion de permisos para acceder a funcionalidades movil

Para ello instalaremos el siguiente paquete:

Expo permissions  https://docs.expo.io/versions/latest/sdk/permissions/ --> yarn add expo-permissions

Instalar paquete expo-image-picker

Hay que añadir permisos para Android. Para ello nos vamos a app.json y ponemos android y estipulamos los permisos que vamos a usar:

 "android" : {
      "permissions" : ["CAMERA_ROLL"]
    },

Actualmente con el emulador se esta trabajando mediante el entorno de expo cuando compilemos la aplicación en el caso de Android tenemos que 
pedir permisos a Android, añadir en app.json estos permisos.

 "android" : {
      "permissions" : ["CAMERA_ROLL","READ_EXTERNAL_STORAGE","WRITE_EXTERNAL_STORAGE"]
    },

Obtener la anchura de la pantall
importamos el paquete Dimensions de React Native
const WidthScreen = Dimensions.get("window").width;

Uso de Geolocalización en expo

1) React Native Maps para poder mostrar un mapa en nuestra aplicación
yarn add react-native-maps  tb disponible para descargar con expo.
2) Expo Location

En Android hay que configurar la API key del mapa porque si no no va a funcionar.

Funciones async devuelve una promesa son funciones que especificamos que sea asi porque necesitamos que terminen antes de seguir ejecutando código.

Libreria para generar id unicos

1) uuid pero da algun problema con react native
2) random-uuid-v4

Para compilar la aplicación y obtener el apk : expo:build android y seleccionamos apk.
Es posible que en android nos de fallos con los mapas ya que google en desarrollo nos deja usar sus mapas pero en producción no.
Tenemos que ponerle la API de Google Maps para Android
Pasos a seguir: https://docs.expo.io/versions/latest/sdk/map-view/

API KEY: AIzaSyA1H-dTJ4O7AcM2TGqPqdpap_5KjiCgRJQ

UseFocusEffect de la libreeria React Navigation para crealizar peticiones cada vez qeu se accede a una screen.

rnfs: Genera una clase